import React, { createContext, useContext, useState } from 'react';

export interface Language {
  code: string;
  name: string;
  nativeName: string;
}

export const languages: Language[] = [
  { code: 'en', name: 'English', nativeName: 'English' },
  { code: 'hi', name: 'Hindi', nativeName: 'рд╣рд┐рдиреНрджреА' },
  { code: 'ta', name: 'Tamil', nativeName: 'родрооро┐ро┤рпН' },
  { code: 'te', name: 'Telugu', nativeName: 'р░др▒Жр░▓р▒Бр░Чр▒Б' },
  { code: 'kn', name: 'Kannada', nativeName: 'р▓Хр▓ир│Нр▓ир▓б' }
];

interface LanguageContextType {
  currentLanguage: string;
  setLanguage: (lang: string) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

const translations: Record<string, Record<string, string>> = {
  en: {
    appName: "Suraksha Sahayak AI",
    title: "Suraksha Sahayak AI ЁЯЗоЁЯЗ│",
    subtitle: "India's Voice-First Emergency Assistant",
    getStarted: "Get Started",
    reportEmergency: "Report Emergency",
    quickEmergencyActions: "Quick Emergency Actions",
    keyFeatures: "Key Features",
    fireEmergency: "Fire Emergency",
    firePrompt: "What to do in a house fire?",
    floodAlert: "Flood Alert", 
    floodPrompt: "I'm in a flood zone, what should I do?",
    medicalEmergency: "Medical Emergency",
    medicalPrompt: "Someone is bleeding. What first aid can I give?",
    policeLegal: "Police/Legal",
    policePrompt: "I'm being harassed. What are my rights?",
    aiAssistant: "AI Assistant",
    aiDescription: "Multilingual voice/text chat in Indian languages",
    locationBased: "Location-Based",
    locationDescription: "Context-aware guidance and alerts",
    offlineReady: "Offline Ready", 
    offlineDescription: "Operates without internet access",
    emergencyCase: "In Case of Emergency",
    emergencyDescription: "For immediate assistance, access emergency contacts or chat with our AI assistant",
    emergencyContacts: "Emergency Contacts",
    status: "Status",
    online: "Online",
    offlineMode: "Offline Mode",
    allFeaturesAvailable: "All Features Available",
    basicFeaturesOnly: "Basic Features Only"
  },
  hi: {
    appName: "рд╕реБрд░рдХреНрд╖рд╛ рд╕рд╣рд╛рдпрдХ AI",
    title: "рд╕реБрд░рдХреНрд╖рд╛ рд╕рд╣рд╛рдпрдХ AI ЁЯЗоЁЯЗ│", 
    subtitle: "рднрд╛рд░рдд рдХрд╛ рд╡реЙрдпрд╕-рдлрд░реНрд╕реНрдЯ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рд╣рд╛рдпрдХ",
    getStarted: "рд╢реБрд░реВ рдХрд░реЗрдВ",
    reportEmergency: "рдЖрдкрд╛рддрдХрд╛рд▓ рдХреА рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ",
    quickEmergencyActions: "рддреНрд╡рд░рд┐рдд рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдХрд╛рд░реНрдп",
    keyFeatures: "рдореБрдЦреНрдп рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ",
    fireEmergency: "рдЖрдЧ рдХреА рдЖрдкрд╛рддрдХрд╛рд▓",
    firePrompt: "рдШрд░ рдореЗрдВ рдЖрдЧ рд▓рдЧрдиреЗ рдкрд░ рдХреНрдпрд╛ рдХрд░реЗрдВ?",
    floodAlert: "рдмрд╛рдврд╝ рдЪреЗрддрд╛рд╡рдиреА",
    floodPrompt: "рдореИрдВ рдмрд╛рдврд╝ рдХреНрд╖реЗрддреНрд░ рдореЗрдВ рд╣реВрдБ, рдореБрдЭреЗ рдХреНрдпрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП?",
    medicalEmergency: "рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЖрдкрд╛рддрдХрд╛рд▓",
    medicalPrompt: "рдХрд┐рд╕реА рд╕реЗ рдЦреВрди рдмрд╣ рд░рд╣рд╛ рд╣реИред рдореИрдВ рдХреНрдпрд╛ рдкреНрд░рд╛рдердорд┐рдХ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рджреЗ рд╕рдХрддрд╛ рд╣реВрдБ?",
    policeLegal: "рдкреБрд▓рд┐рд╕/рдХрд╛рдиреВрдиреА",
    policePrompt: "рдореБрдЭреЗ рдкрд░реЗрд╢рд╛рди рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИред рдореЗрд░реЗ рдХреНрдпрд╛ рдЕрдзрд┐рдХрд╛рд░ рд╣реИрдВ?",
    aiAssistant: "рдПрдЖрдИ рд╕рд╣рд╛рдпрдХ",
    aiDescription: "рднрд╛рд░рддреАрдп рднрд╛рд╖рд╛рдУрдВ рдореЗрдВ рдмрд╣реБрднрд╛рд╖реА рд╡реЙрдпрд╕/рдЯреЗрдХреНрд╕реНрдЯ рдЪреИрдЯ",
    locationBased: "рд╕реНрдерд╛рди-рдЖрдзрд╛рд░рд┐рдд",
    locationDescription: "рд╕рдВрджрд░реНрдн-рдЬрд╛рдЧрд░реВрдХ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдФрд░ рдЕрд▓рд░реНрдЯ",
    offlineReady: "рдСрдлрд▓рд╛рдЗрди рддреИрдпрд╛рд░",
    offlineDescription: "рдЗрдВрдЯрд░рдиреЗрдЯ рдПрдХреНрд╕реЗрд╕ рдХреЗ рдмрд┐рдирд╛ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ",
    emergencyCase: "рдЖрдкрд╛рддрдХрд╛рд▓ рдХреЗ рдорд╛рдорд▓реЗ рдореЗрдВ",
    emergencyDescription: "рддрддреНрдХрд╛рд▓ рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП, рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ рддрдХ рдкрд╣реБрдВрдЪреЗрдВ рдпрд╛ рд╣рдорд╛рд░реЗ рдПрдЖрдИ рд╕рд╣рд╛рдпрдХ рд╕реЗ рдЪреИрдЯ рдХрд░реЗрдВ",
    emergencyContacts: "рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ",
    status: "рд╕реНрдерд┐рддрд┐",
    online: "рдСрдирд▓рд╛рдЗрди",
    offlineMode: "рдСрдлрд▓рд╛рдЗрди рдореЛрдб",
    allFeaturesAvailable: "рд╕рднреА рд╕реБрд╡рд┐рдзрд╛рдПрдВ рдЙрдкрд▓рдмреНрдз",
    basicFeaturesOnly: "рдХреЗрд╡рд▓ рдмреБрдирд┐рдпрд╛рджреА рд╕реБрд╡рд┐рдзрд╛рдПрдВ"
  },
  ta: {
    appName: "роЪрпБро░роХрпНро╖ро╛ роЪро╣ро╛ропроХрпН AI",
    title: "роЪрпБро░роХрпНро╖ро╛ роЪро╣ро╛ропроХрпН AI ЁЯЗоЁЯЗ│",
    subtitle: "роЗроирпНродро┐ропро╛ро╡ро┐ройрпН роХрпБро░ро▓рпН-роорпБродро▓рпН роЕро╡роЪро░ роЙродро╡ро┐ропро╛ро│ро░рпН",
    getStarted: "родрпКроЯроЩрпНроХрпБроЩрпНроХро│рпН",
    reportEmergency: "роЕро╡роЪро░роиро┐ро▓рпИропрпИ роЕро▒ро┐роХрпНроХрпИ роЪрпЖропрпНропрпБроЩрпНроХро│рпН",
    quickEmergencyActions: "ро╡ро┐ро░рпИро╡рпБ роЕро╡роЪро░ роироЯро╡роЯро┐роХрпНроХрпИроХро│рпН",
    keyFeatures: "роорпБроХрпНроХро┐роп роЕроорпНроЪроЩрпНроХро│рпН",
    fireEmergency: "родрпА роЕро╡роЪро░роиро┐ро▓рпИ",
    firePrompt: "ро╡рпАроЯрпНроЯро┐ро▓рпН родрпА рокро┐роЯро┐родрпНродро╛ро▓рпН роОройрпНрой роЪрпЖропрпНро╡родрпБ?",
    floodAlert: "ро╡рпЖро│рпНро│ роОроЪрпНроЪро░ро┐роХрпНроХрпИ",
    floodPrompt: "роиро╛ройрпН ро╡рпЖро│рпНро│ рокроХрпБродро┐ропро┐ро▓рпН роЗро░рпБроХрпНроХро┐ро▒рпЗройрпН, роиро╛ройрпН роОройрпНрой роЪрпЖропрпНроп ро╡рпЗрогрпНроЯрпБроорпН?",
    medicalEmergency: "рооро░рпБродрпНродрпБро╡ роЕро╡роЪро░роиро┐ро▓рпИ",
    medicalPrompt: "ропро╛ро░рпЛ ро░родрпНродроорпН ро╡ро░рпБроХро┐ро▒родрпБ. роиро╛ройрпН роОройрпНрой роорпБродро▓рпБродро╡ро┐ роХрпКроЯрпБроХрпНроХ роорпБроЯро┐ропрпБроорпН?",
    policeLegal: "роХро╛ро╡ро▓рпНродрпБро▒рпИ/роЪроЯрпНроЯ",
    policePrompt: "роиро╛ройрпН родрпКроирпНродро░ро╡рпБ роЪрпЖропрпНропрокрпНрокроЯрпБроХро┐ро▒рпЗройрпН. роОройрпН роЙро░ро┐роорпИроХро│рпН роОройрпНрой?",
    aiAssistant: "AI роЙродро╡ро┐ропро╛ро│ро░рпН",
    aiDescription: "роЗроирпНродро┐роп роорпКро┤ро┐роХро│ро┐ро▓рпН рокро▓роорпКро┤ро┐ роХрпБро░ро▓рпН/роЙро░рпИ роЕро░роЯрпНроЯрпИ",
    locationBased: "роЗроЯроорпН-роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой",
    locationDescription: "роЪрпВро┤ро▓рпН-роЙрогро░рпНро╡рпБ ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпН рооро▒рпНро▒рпБроорпН роОроЪрпНроЪро░ро┐роХрпНроХрпИроХро│рпН",
    offlineReady: "роЖроГрокрпНро▓рпИройрпН родропро╛ро░рпН",
    offlineDescription: "роЗрогрпИроп роЕрогрпБроХро▓рпН роЗро▓рпНро▓ро╛рооро▓рпН роЗропроЩрпНроХрпБроХро┐ро▒родрпБ",
    emergencyCase: "роЕро╡роЪро░роиро┐ро▓рпИропро┐ро▓рпН",
    emergencyDescription: "роЙроЯройроЯро┐ роЙродро╡ро┐роХрпНроХро╛роХ, роЕро╡роЪро░ родрпКроЯро░рпНрокрпБроХро│рпИ роЕрогрпБроХро╡рпБроорпН роЕро▓рпНро▓родрпБ роОроЩрпНроХро│рпН AI роЙродро╡ро┐ропро╛ро│ро░рпБроЯройрпН роЕро░роЯрпНроЯрпИропроЯро┐роХрпНроХро╡рпБроорпН",
    emergencyContacts: "роЕро╡роЪро░ родрпКроЯро░рпНрокрпБроХро│рпН",
    status: "роиро┐ро▓рпИ",
    online: "роЖройрпНро▓рпИройрпН",
    offlineMode: "роЖроГрокрпНро▓рпИройрпН роорпБро▒рпИ",
    allFeaturesAvailable: "роЕройрпИродрпНродрпБ роЕроорпНроЪроЩрпНроХро│рпБроорпН роХро┐роЯрпИроХрпНроХро┐ройрпНро▒рой",
    basicFeaturesOnly: "роЕроЯро┐рокрпНрокроЯрпИ роЕроорпНроЪроЩрпНроХро│рпН роороЯрпНроЯрпБроорпН"
  },
  te: {
    appName: "р░╕р▒Бр░░р░Хр▒Нр░╖ р░╕р░╣р░╛р░пр░Хр▒Н AI", 
    title: "р░╕р▒Бр░░р░Хр▒Нр░╖ р░╕р░╣р░╛р░пр░Хр▒Н AI ЁЯЗоЁЯЗ│",
    subtitle: "р░нр░╛р░░р░др░жр▒Зр░╢ р░╡р░╛р░пр░┐р░╕р▒Н-р░лр░╕р▒Нр░Яр▒Н р░Ер░др▒Нр░пр░╡р░╕р░░ р░╕р░╣р░╛р░пр░Хр▒Бр░бр▒Б",
    getStarted: "р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐",
    reportEmergency: "р░Ер░др▒Нр░пр░╡р░╕р░░р░др░ир▒Б р░ир░┐р░╡р▒Зр░жр░┐р░Вр░Ър░Вр░бр░┐",
    quickEmergencyActions: "р░др▒Нр░╡р░░р░┐р░д р░Ер░др▒Нр░пр░╡р░╕р░░ р░Ър░░р▒Нр░пр░▓р▒Б",
    keyFeatures: "р░кр▒Нр░░р░зр░╛р░и р░▓р░Хр▒Нр░╖р░гр░╛р░▓р▒Б",
    fireEmergency: "р░Ер░Чр▒Нр░ир░┐ р░Ер░др▒Нр░пр░╡р░╕р░░р░д",
    firePrompt: "р░Зр░Вр░Яр░┐р░▓р▒Л р░ор░Вр░Я р░кр░Яр▒Нр░Яр░┐р░ир░кр▒Нр░кр▒Бр░бр▒Б р░Пр░ор░┐ р░Ър▒Зр░пр░╛р░▓р░┐?",
    floodAlert: "р░╡р░░р░ж р░╣р▒Жр░Ър▒Нр░Ър░░р░┐р░Х",
    floodPrompt: "р░ир▒Зр░ир▒Б р░╡р░░р░ж р░кр▒Нр░░р░╛р░Вр░др░Вр░▓р▒Л р░Йр░ир▒Нр░ир░╛р░ир▒Б, р░ир▒Зр░ир▒Б р░Пр░ор░┐ р░Ър▒Зр░пр░╛р░▓р░┐?",
    medicalEmergency: "р░╡р▒Ир░жр▒Нр░п р░Ер░др▒Нр░пр░╡р░╕р░░р░д",
    medicalPrompt: "р░Ор░╡р░░р░┐р░Хр▒Ир░ир░╛ р░░р░Хр▒Нр░др░В р░Хр░╛р░░р▒Бр░др▒Лр░Вр░жр░┐. р░ир▒Зр░ир▒Б р░П р░кр▒Нр░░р░╛р░ер░ор░┐р░Х р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Зр░╡р▒Нр░╡р░Чр░▓р░ир▒Б?",
    policeLegal: "р░кр▒Лр░▓р▒Ар░╕р▒Б/р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и",
    policePrompt: "р░ир▒Зр░ир▒Б р░╡р▒Зр░зр░┐р░Вр░кр▒Бр░▓р░Хр▒Б р░Чр▒Бр░░р░╡р▒Бр░др▒Бр░ир▒Нр░ир░╛р░ир▒Б. р░ир░╛ р░╣р░Хр▒Нр░Хр▒Бр░▓р▒Б р░Пр░ор░┐р░Яр░┐?",
    aiAssistant: "AI р░╕р░╣р░╛р░пр░Хр▒Бр░бр▒Б",
    aiDescription: "р░нр░╛р░░р░др▒Ар░п р░нр░╛р░╖р░▓р░▓р▒Л р░мр░╣р▒Бр░нр░╛р░╖р░╛ р░╡р░╛р░пр░┐р░╕р▒Н/р░Яр▒Жр░Хр▒Нр░╕р▒Нр░Яр▒Н р░Ър░╛р░Яр▒Н",
    locationBased: "р░╕р▒Нр░ер░╛р░ир░В-р░Жр░зр░╛р░░р░┐р░д",
    locationDescription: "р░╕р░Вр░жр░░р▒Нр░н-р░Ер░╡р░Чр░╛р░╣р░и р░ор░╛р░░р▒Нр░Чр░жр░░р▒Нр░╢р░Хр░др▒Нр░╡р░В р░ор░░р░┐р░пр▒Б р░╣р▒Жр░Ър▒Нр░Ър░░р░┐р░Хр░▓р▒Б",
    offlineReady: "р░Жр░лр▒НтАМр░▓р▒Ир░ир▒Н р░╕р░┐р░жр▒Нр░зр░В",
    offlineDescription: "р░Зр░Вр░Яр░░р▒Нр░ир▒Жр░Яр▒Н р░пр░╛р░Хр▒Нр░╕р▒Жр░╕р▒Н р░▓р▒Зр░Хр▒Бр░Вр░бр░╛ р░кр░ир░┐р░Ър▒Зр░╕р▒Нр░др▒Бр░Вр░жр░┐",
    emergencyCase: "р░Ер░др▒Нр░пр░╡р░╕р░░ р░кр░░р░┐р░╕р▒Нр░ер░┐р░др░┐р░▓р▒Л",
    emergencyDescription: "р░др░Хр▒Нр░╖р░г р░╕р░╣р░╛р░пр░В р░Хр▒Лр░╕р░В, р░Ер░др▒Нр░пр░╡р░╕р░░ р░кр░░р░┐р░Ър░пр░╛р░▓р░ир▒Б р░пр░╛р░Хр▒Нр░╕р▒Жр░╕р▒Н р░Ър▒Зр░пр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░ор░╛ AI р░╕р░╣р░╛р░пр░Хр▒Бр░бр░┐р░др▒Л р░Ър░╛р░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    emergencyContacts: "р░Ер░др▒Нр░пр░╡р░╕р░░ р░кр░░р░┐р░Ър░пр░╛р░▓р▒Б",
    status: "р░╕р▒Нр░ер░┐р░др░┐",
    online: "р░Жр░ир▒НтАМр░▓р▒Ир░ир▒Н",
    offlineMode: "р░Жр░лр▒НтАМр░▓р▒Ир░ир▒Н р░ор▒Лр░бр▒Н",
    allFeaturesAvailable: "р░Ер░ир▒Нр░ир░┐ р░▓р░Хр▒Нр░╖р░гр░╛р░▓р▒Б р░Ер░Вр░жр▒Бр░мр░╛р░Яр▒Бр░▓р▒Л",
    basicFeaturesOnly: "р░кр▒Нр░░р░╛р░ер░ор░┐р░Х р░▓р░Хр▒Нр░╖р░гр░╛р░▓р▒Б р░ор░╛р░др▒Нр░░р░ор▒З"
  },
  kn: {
    appName: "р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓╛ р▓╕р▓╣р▓╛р▓пр▓Х AI",
    title: "р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓╛ р▓╕р▓╣р▓╛р▓пр▓Х AI ЁЯЗоЁЯЗ│", 
    subtitle: "р▓нр▓╛р▓░р▓др▓ж р▓╡р▓╛р▓пр│Нр▓╕р│Н-р▓лр▓╕р│Нр▓Яр│Н р▓др│Бр▓░р│Нр▓др│Б р▓╕р▓╣р▓╛р▓пр▓Х",
    getStarted: "р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐",
    reportEmergency: "р▓др│Бр▓░р│Нр▓др│Бр▓╕р│Нр▓ер▓┐р▓др▓┐р▓пр▓ир│Нр▓ир│Б р▓╡р▓░р▓жр▓┐ р▓ор▓╛р▓бр▓┐",
    quickEmergencyActions: "р▓др│Нр▓╡р▓░р▓┐р▓д р▓др│Бр▓░р│Нр▓др│Б р▓Хр│Нр▓░р▓ор▓Чр▓│р│Б",
    keyFeatures: "р▓ор│Бр▓Цр│Нр▓п р▓╡р│Ир▓╢р▓┐р▓╖р│Нр▓Яр│Нр▓пр▓Чр▓│р│Б",
    fireEmergency: "р▓мр│Жр▓Вр▓Хр▓┐ р▓др│Бр▓░р│Нр▓др│Бр▓╕р│Нр▓ер▓┐р▓др▓┐",
    firePrompt: "р▓ор▓ир│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓мр│Жр▓Вр▓Хр▓┐ р▓╣р▓др│Нр▓др▓┐р▓жр▓╛р▓Ч р▓Пр▓ир│Б р▓ор▓╛р▓бр▓мр│Зр▓Хр│Б?",
    floodAlert: "р▓кр│Нр▓░р▓╡р▓╛р▓╣ р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Ж",
    floodPrompt: "р▓ир▓╛р▓ир│Б р▓кр│Нр▓░р▓╡р▓╛р▓╣ р▓кр│Нр▓░р▓жр│Зр▓╢р▓жр▓▓р│Нр▓▓р▓┐р▓жр│Нр▓жр│Зр▓ир│Ж, р▓ир▓╛р▓ир│Б р▓Пр▓ир│Б р▓ор▓╛р▓бр▓мр│Зр▓Хр│Б?",
    medicalEmergency: "р▓╡р│Ир▓жр│Нр▓пр▓Хр│Ар▓п р▓др│Бр▓░р│Нр▓др│Бр▓╕р│Нр▓ер▓┐р▓др▓┐",
    medicalPrompt: "р▓пр▓╛р▓░р▓┐р▓Чр▓╛р▓жр▓░р│В р▓░р▓Хр│Нр▓д р▓мр▓░р│Бр▓др│Нр▓др▓┐р▓жр│Ж. р▓ир▓╛р▓ир│Б р▓пр▓╛р▓╡ р▓кр│Нр▓░р▓╛р▓ер▓ор▓┐р▓Х р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓ир│Ар▓бр▓мр▓╣р│Бр▓жр│Б?",
    policeLegal: "р▓кр│Кр▓▓р│Ар▓╕р│Н/р▓Хр▓╛р▓ир│Вр▓ир│Б",
    policePrompt: "р▓ир▓╛р▓ир│Б р▓Хр▓┐р▓░р│Бр▓Хр│Бр▓│р▓Хр│Нр▓Хр│Ж р▓Тр▓│р▓Чр▓╛р▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Нр▓жр│Зр▓ир│Ж. р▓ир▓ир│Нр▓и р▓╣р▓Хр│Нр▓Хр│Бр▓Чр▓│р│Б р▓пр▓╛р▓╡р│Бр▓╡р│Б?",
    aiAssistant: "AI р▓╕р▓╣р▓╛р▓пр▓Х",
    aiDescription: "р▓нр▓╛р▓░р▓др│Ар▓п р▓нр▓╛р▓╖р│Жр▓Чр▓│р▓▓р│Нр▓▓р▓┐ р▓мр▓╣р│Бр▓нр▓╛р▓╖р▓╛ р▓зр│Нр▓╡р▓ир▓┐/р▓кр▓ар│Нр▓п р▓Ър▓╛р▓Яр│Н",
    locationBased: "р▓╕р│Нр▓ер▓│-р▓Жр▓зр▓╛р▓░р▓┐р▓д",
    locationDescription: "р▓╕р▓Вр▓жр▓░р│Нр▓н-р▓Ер▓░р▓┐р▓╡р▓┐р▓и р▓ор▓╛р▓░р│Нр▓Чр▓жр▓░р│Нр▓╢р▓и р▓ор▓др│Нр▓др│Б р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Жр▓Чр▓│р│Б",
    offlineReady: "р▓Жр▓лр│НтАМр▓▓р│Ир▓ир│Н р▓╕р▓┐р▓жр│Нр▓з",
    offlineDescription: "р▓Зр▓Вр▓Яр▓░р│Нр▓ир│Жр▓Яр│Н р▓кр│Нр▓░р▓╡р│Зр▓╢р▓╡р▓┐р▓▓р│Нр▓▓р▓жр│Ж р▓Хр▓╛р▓░р│Нр▓пр▓ир▓┐р▓░р│Нр▓╡р▓╣р▓┐р▓╕р│Бр▓др│Нр▓др▓жр│Ж",
    emergencyCase: "р▓др│Бр▓░р│Нр▓др│Б р▓кр▓░р▓┐р▓╕р│Нр▓ер▓┐р▓др▓┐р▓пр▓▓р│Нр▓▓р▓┐",
    emergencyDescription: "р▓др▓Хр│Нр▓╖р▓гр▓ж р▓╕р▓╣р▓╛р▓пр▓Хр│Нр▓Хр▓╛р▓Чр▓┐, р▓др│Бр▓░р│Нр▓др│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓Чр▓│р▓ир│Нр▓ир│Б р▓кр│Нр▓░р▓╡р│Зр▓╢р▓┐р▓╕р▓┐ р▓Ер▓ер▓╡р▓╛ р▓ир▓ор│Нр▓о AI р▓╕р▓╣р▓╛р▓пр▓Хр▓░р│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓Ър▓╛р▓Яр│Н р▓ор▓╛р▓бр▓┐",
    emergencyContacts: "р▓др│Бр▓░р│Нр▓др│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓Чр▓│р│Б",
    status: "р▓╕р│Нр▓ер▓┐р▓др▓┐",
    online: "р▓Жр▓ир│НтАМр▓▓р│Ир▓ир│Н",
    offlineMode: "р▓Жр▓лр│НтАМр▓▓р│Ир▓ир│Н р▓ор│Лр▓бр│Н",
    allFeaturesAvailable: "р▓Ор▓▓р│Нр▓▓р▓╛ р▓╡р│Ир▓╢р▓┐р▓╖р│Нр▓Яр│Нр▓пр▓Чр▓│р│Б р▓▓р▓нр│Нр▓пр▓╡р▓┐р▓╡р│Ж",
    basicFeaturesOnly: "р▓ор│Вр▓▓р▓нр│Вр▓д р▓╡р│Ир▓╢р▓┐р▓╖р│Нр▓Яр│Нр▓пр▓Чр▓│р│Б р▓ор▓╛р▓др│Нр▓░"
  }
};

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [currentLanguage, setCurrentLanguage] = useState('en');

  const setLanguage = (lang: string) => {
    setCurrentLanguage(lang);
  };

  const t = (key: string): string => {
    return translations[currentLanguage]?.[key] || translations['en'][key] || key;
  };

  return (
    <LanguageContext.Provider value={{ currentLanguage, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
